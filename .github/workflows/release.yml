name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

permissions:
  contents: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.extract_version.outputs.value }}
    steps:
    - name: Extract tag version
      id: extract_version
      uses: actions/github-script@v6
      with:
        script: |
          const tag = github.context.ref.split('/').pop();
          const version = tag.startsWith('v') ? tag.substring(1) : tag;
          console.log(`Tag:${tag} -> Version:${version}`);
          return { value: version };

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          Web version deployed at https://alleey.github.io/flutter-guesstheword/#/
        draft: true
        prerelease: false

  build-web-android:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
    - uses: actions/checkout@v4

    - name: Write version to file
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const version = ${{ needs.setup.outputs.version }};
          fs.writeFileSync('assets/version.json', JSON.stringify({ version }));
          console.log(`${content} written to assets/version.json successfully`);

    - name: Write version to file
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const version = ${{ needs.setup.outputs.version }};
          fs.writeFileSync('assets/version.json', JSON.stringify({ version }));
          console.log(`${content} written to assets/version.json successfully`);

    - name: Build
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version-file: pubspec.yaml
        architecture: x64
    - run: flutter pub get
    - run: flutter build web --base-href /flutter-guesstheword/ --build-name=${{ needs.setup.outputs.version }} --build-number=${{ github.run_number }}
    - run: flutter build apk --release --build-name=${{ needs.setup.outputs.version }} --build-number=${{ github.run_number }}

    - name: Deploy Web
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: build/web

    - name: Archive Web Release
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: guesstheword-${{ github.ref_name }}-web.zip
        directory: build/web

    - name: Attach Web Bundle
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.setup.outputs.upload_url }}
        asset_path: build/web/guesstheword-${{ github.ref_name }}-web.zip
        asset_name: guesstheword-${{ github.ref_name }}-web.zip
        asset_content_type: application/zip

    - name: Attach APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.setup.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-release.apk
        asset_name: guesstheword-${{ github.ref_name }}.apk
        asset_content_type: application/zip

  build-linux:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
    - uses: actions/checkout@v4

    - name: Install flutter dependencies
      run: sudo apt-get install -y -f clang cmake ninja-build libgtk-3-dev

    - name: Install app dependencies
      run: sudo apt-get install -y -f libunwind-dev libgstreamer1.0-dev libgstreamer-plugins-bad1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-good1.0-dev

    - name: Write version to file
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const version = ${{ needs.setup.outputs.version }};
          fs.writeFileSync('assets/version.json', JSON.stringify({ version }));
          console.log(`${content} written to assets/version.json successfully`);

    - name: Build
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version-file: pubspec.yaml
        architecture: x64
    - run: flutter pub get
    - run: flutter config --enable-linux-desktop
    - run: flutter build linux --release --build-name=${{ needs.setup.outputs.version }} --build-number=${{ github.run_number }}

    - name: Archive Linux Release
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: guesstheword-${{ github.ref_name }}-linux.zip
        directory: build/linux/x64/release/bundle

    - name: Attach Linux Bundle
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.setup.outputs.upload_url }}
        asset_path: build/linux/x64/release/bundle/guesstheword-${{ github.ref_name }}-linux.zip
        asset_name: guesstheword-${{ github.ref_name }}-linux.zip
        asset_content_type: application/zip

  build-windows:
    runs-on: windows-latest
    needs: [setup]
    steps:
    - uses: actions/checkout@v4

    - name: Write version to file
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const version = ${{ needs.setup.outputs.version }};
          fs.writeFileSync('assets/version.json', JSON.stringify({ version }));
          console.log(`${content} written to assets/version.json successfully`);

    - name: Build
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version: '3.22.0'
        architecture: x64
    - run: flutter pub get
    - run: flutter config --enable-windows-desktop
    - run: flutter build windows --release --build-name=${{ needs.setup.outputs.version }} --build-number=${{ github.run_number }}

    - name: Archive Windows Release
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: guesstheword-${{ github.ref_name }}-windows.zip
        directory: build/windows/x64/runner/Release

    - name: Attach Windows Bundle
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.setup.outputs.upload_url }}
        asset_path: build/windows/x64/runner/Release/guesstheword-${{ github.ref_name }}-windows.zip
        asset_name: guesstheword-${{ github.ref_name }}-windows.zip
        asset_content_type: application/zip

  build-macos:
    runs-on: macos-latest
    needs: [setup]
    steps:
    - uses: actions/checkout@v4

    - name: Write version to file
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const version = ${{ needs.setup.outputs.version }};
          fs.writeFileSync('assets/version.json', JSON.stringify({ version }));
          console.log(`${content} written to assets/version.json successfully`);

    - name: Build
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version-file: pubspec.yaml
        architecture: x64
    - run: flutter pub get
    - run: flutter config --enable-macos-desktop
    - run: flutter build macos --release --build-name=${{ needs.setup.outputs.version }} --build-number=${{ github.run_number }}

    - name: Archive Macos Release
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: guesstheword-${{ github.ref_name }}-macos.zip
        directory: build/macos/Build/Products/Release

    - name: Attach Macos Bundle
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.setup.outputs.upload_url }}
        asset_path: build/macos/Build/Products/Release/guesstheword-${{ github.ref_name }}-macos.zip
        asset_name: guesstheword-${{ github.ref_name }}-macos.zip
        asset_content_type: application/zip
