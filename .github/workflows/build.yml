# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
      - "!main"

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

permissions:
  contents: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.value }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Fetch all history for tags

      - name: Extract latest tag version
        id: extract_version
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            let latestTag;
            try {
              latestTag = execSync('git describe --tags `git rev-list --tags --max-count=1`').toString().trim();
            } catch (error) {
              console.log('No tags found, using default version 0.0.1');
              latestTag = 'v0.0.1';
            }
            const version = latestTag.startsWith('v') ? latestTag.substring(1) : latestTag;
            console.log(`Tag:${latestTag} -> Version:${version}`);
            return { value: version };

  build-web-android:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
    - uses: actions/checkout@v4

    - name: Write version to file
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const version = ${{ needs.setup.outputs.version }};
          fs.writeFileSync('assets/version.json', JSON.stringify({ version }));
          console.log(`${content} written to assets/version.json successfully`);

    - name: Build Web and Android
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version-file: pubspec.yaml
        architecture: x64
    - run: flutter pub get
    - run: flutter build web --base-href /flutter-guesstheword/ --build-name=${{ needs.setup.outputs.version }} --build-number=${{ github.run_number }}
    - run: flutter build apk --release --build-name=${{ needs.setup.outputs.version }} --build-number=${{ github.run_number }}

    - name: Attach Website
      uses: actions/upload-artifact@v3
      with:
        name: Web-guesstheword-${{ github.ref_name }}-${{ github.sha }}
        path: build/web

    - name: Attach APK
      uses: actions/upload-artifact@v3
      with:
        name: APK-guesstheword-${{ github.ref_name }}-${{ github.sha }}
        path: build/app/outputs/flutter-apk/app-release.apk

  build-linux:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
    - uses: actions/checkout@v4

    - name: Install flutter dependencies
      run: sudo apt-get install -y -f clang cmake ninja-build libgtk-3-dev

    - name: Install app dependencies
      run: sudo apt-get install -y -f libunwind-dev libgstreamer1.0-dev libgstreamer-plugins-bad1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-good1.0-dev

    - name: Write version to file
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const version = ${{ needs.setup.outputs.version }};
          fs.writeFileSync('assets/version.json', JSON.stringify({ version }));
          console.log(`${content} written to assets/version.json successfully`);

    - name: Build Linux
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version-file: pubspec.yaml
        architecture: x64
    - run: flutter pub get
    - run: flutter config --enable-linux-desktop
    - run: flutter build linux --release --build-name=${{ needs.setup.outputs.version }} --build-number=${{ github.run_number }}

    - name: Attach Linux Bundle
      uses: actions/upload-artifact@v3
      with:
        name: Linux-guesstheword-${{ github.ref_name }}-${{ github.sha }}
        path: build/linux/x64/release/bundle

  build-windows:
    runs-on: windows-latest
    needs: [setup]
    steps:
    - uses: actions/checkout@v4

    - name: Write version to file
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const version = ${{ needs.setup.outputs.version }};
          fs.writeFileSync('assets/version.json', JSON.stringify({ version }));
          console.log(`${content} written to assets/version.json successfully`);

    - name: Build Windows
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version: '3.22.0'
        architecture: x64
    - run: flutter pub get
    - run: flutter config --enable-windows-desktop
    - run: flutter build windows --release --build-name=${{ needs.setup.outputs.version }} --build-number=${{ github.run_number }}

    - name: Attach Windows Bundle
      uses: actions/upload-artifact@v3
      with:
        name: Win-guesstheword-${{ github.ref_name }}-${{ github.sha }}
        path: build/windows/x64/runner/Release

  build-macos:
    runs-on: macos-latest
    needs: [setup]
    steps:
    - uses: actions/checkout@v4

    - name: Write version to file
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const version = ${{ needs.setup.outputs.version }};
          fs.writeFileSync('assets/version.json', JSON.stringify({ version }));
          console.log(`${content} written to assets/version.json successfully`);

    - name: Build Macos
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        flutter-version-file: pubspec.yaml
        architecture: x64
    - run: flutter pub get
    - run: flutter config --enable-macos-desktop
    - run: flutter build macos --release --build-name=${{ needs.setup.outputs.version }} --build-number=${{ github.run_number }}

    - name: Attach Windows Bundle
      uses: actions/upload-artifact@v3
      with:
        name: Mac-guesstheword-${{ github.ref_name }}-${{ github.sha }}
        path: build/macos/Build/Products/Release
